untracked 
-git nao conhece ainda


unmodified
-esta no git mas nao foi modificado



modified 
-foi modificado 
 
 
staged
-arquivo está pronto para ser comitado

após commit voltara para unmodified!!


//log por autor
git log --author="F"


//git show 907b3bb8df327cf424316f1ab98d92bb233ede01 (mostra tudo desse commit especifico)


git diff (mostra as alterações ANTES DE COMITAR)
git diff --name-only (mostra os arquivos alterados, ANTES DE COMITAR)



//DESFAZENDO COISAS


git checkout nomedoarquivo (desfaz antes de passaar para staged)
git reset HEAD nomedoarquivo(tira da area de staged e passa para modified)


git reset --soft  (volta o comit, mas deixa em staged)
git reset --mixed (vola para o estado modified)
git reset --hard hasdocommitanterior (desfaz tudo)

git reset altera o historico do commit cuidado




//chave ssh

sua chave privada abre a chave publica no github


//git push


git push origin master (para origin de master)


//ao fazer o clone vc pode mudar o nome do repositorio clonado

git clone nomedorepo.git seunovonome



//branch

ponteiro movel que aponta para um commit

//criar
git checkout -b nomebranch  

//deleta
git branch -D nomebranch


// troca a branch
git checkout nomebranch   



//merge e rebase


c0 - c1 - c2 ---c4 ------ c6
          c3 ---c5 --------^

//merge nao distroi historico
//contra: cria um commit novo só pra isso
//contra: polui historico


       c3 <- é jogado pra frente de c4   (fast foward)
c0 c1  c2  c4   c3'

pro: evita commit extra
pro: historico linear
contra: perde ordem cronologica (quem veio antes? depois?)


//gitignore

*.json  //todos do tipo json
db.xls  //nome específico do arquivo
pasta/ola.txt  //nome com o caminho da pasta


//git stash
aquivo que guarda modificações que nao foram comitadas


git stash //salva as alterações nao comitadas
git stash apply pega elas de volta
git stash list //lista todas
git stash clear //limpa a lista



//alias
git config --global alias.s status  //atribuiu um alias que chama o status

//tags  cria uma versao no github (uma release)

git tag -a 1.0.0 -m "Readme finalizado"
git push origin master --tags